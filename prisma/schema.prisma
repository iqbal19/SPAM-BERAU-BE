// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @default(uuid()) @id
  email         String?   @unique @db.VarChar(60)
  username      String    @unique @db.VarChar(40)
  nama          String    @db.VarChar(120)
  password      String
  status        Status    @default(AKTIF)
  role          Role      @default(ADMIN)  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Desa {
  id            BigInt      @default(autoincrement()) @id
  kecamatan_id  BigInt
  name          String
  description   String     
  is_delete     Boolean     @default(false)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  SpamCakupan   SpamCakupan[]
}

model Spam {
  id                Int      @default(autoincrement()) @id
  lat               Decimal
  long              Decimal
  nama              String
  alamat            String
  kapasitas         Decimal
  sr                Decimal
  pengelola         String
  riwayat_aktivitas String      @db.Text()
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  SpamCakupan       SpamCakupan[]
}

model SpamCakupan {
  id                Int         @default(autoincrement()) @id
  spamId            Int
  desaId            BigInt
  spam              Spam        @relation(fields: [spamId], references:[id])
  desa              Desa        @relation(fields: [desaId], references:[id])
}

enum Status {
  AKTIF
  NON_AKTIF
}

enum Role {
  ADMIN_APLIKASI
  ADMIN
}